version: '3.8'

networks:
  proxy:
    name: proxy
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: $NETWORK_SUBNET

services:
  origin:
    image: cassandra:3.11
    restart: unless-stopped
    environment:
      - CASSANDRA_CLUSTER_NAME='origin_cluster'
      - CASSANDRA_NUM_TOKENS=32
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    networks:
      proxy:

  target:
    image: cassandra:4.0
    restart: unless-stopped
    environment:
      - CASSANDRA_CLUSTER_NAME='target_cluster'
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    networks:
      proxy:

  proxy:
    build: ./docker-compose/services/proxy
    restart: unless-stopped
    tty: true
    privileged: true
    volumes:
      - ./docker-compose/services/proxy/proxy-entrypoint.sh:/usr/bin/proxy-entrypoint.sh
      - ./docker-compose/share:/run/zdm-proxy-automation/
    networks:
      proxy:

  jumphost:
    build: ./docker-compose/services/jumphost
    restart: unless-stopped
    tty: true
    environment:
      - CIDR_IP_SUBNET=$NETWORK_SUBNET
    volumes:
      - ./docker-compose/services/jumphost/jumphost-entrypoint.sh:/usr/bin/jumphost-entrypoint.sh
      - ./docker-compose/share:/run/zdm-proxy-automation/
      - ./ansible/:/opt/zdm-proxy-automation/ansible/
    networks:
      proxy:

  client:
    build: ./docker-compose/services/client
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker-compose/services/client/client-entrypoint.sh:/usr/bin/client-entrypoint.sh
      - ./docker-compose/share:/run/zdm-proxy-automation/
    networks:
      proxy: